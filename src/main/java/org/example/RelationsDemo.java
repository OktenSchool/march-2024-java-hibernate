package org.example;

import jakarta.persistence.EntityManagerFactory;
import jakarta.persistence.Persistence;
import org.example.entity.Address;
import org.example.entity.Person;
import org.example.entity.Product;
import org.example.entity.Tag;

import java.util.HashSet;
import java.util.List;
import java.util.Set;

public class RelationsDemo {

    public static void main(String[] args) {
        try (EntityManagerFactory emf = Persistence.createEntityManagerFactory("ProductDatabase")) {
            JpaUtil jpaUtil = new JpaUtil(emf);

            jpaUtil.doInJpa(entityManager -> {
                Address johnAddress = new Address();
                johnAddress.setCity("Kyiv");
                johnAddress.setStreet("Volodymyrska, 55");

                Person person = new Person();
                person.setName("John");
                person.setAddress(johnAddress);

                // we don't need to call entityManager.persist(johnAddress) as address field in Person class has CascadeType.ALL
                entityManager.persist(person);
            });

            jpaUtil.doInJpa(entityManager -> {
                Person person = entityManager.find(Person.class, 1);
                Set<Person> persons = new HashSet<>(); // hashCode is generated by Lombok and contains call to address field
                persons.add(person);
            });

            jpaUtil.doInJpa(entityManager -> {
                Product product = new Product();
                product.setName("test product");
                product.setCurrentDiscount(56D);

                Tag tag1 = new Tag();
                tag1.setValue("розпродаж");
                Tag tag2 = new Tag();
                tag2.setValue("акція_2024");

                product.setTags(List.of(tag1, tag2));

                entityManager.persist(tag1);
                entityManager.persist(tag2);
                entityManager.persist(product);
            });

            jpaUtil.doInJpa(entityManager -> {
                Product product = entityManager.find(Product.class, 1);
                System.out.println(product);
            });
        }
    }
}
